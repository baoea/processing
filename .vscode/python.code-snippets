{
  // Place your PPACT workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Read CSV from data folder": {
    "scope": "python",
    "prefix": "read_csv",
    "body": "$1 = pd.read_csv(data_file_path('$2'))"
  },
  "Clean script": {
    "scope": "python",
    "prefix": "clean",
    "body": [
      "from lib.columns import clean_column_names",
      "from lib.path import data_file_path, ensure_data_dir",
      "import pandas as pd",
      "import sys",
      "sys.path.append('../')",
      "",
      "",
      "def clean():",
      "    return pd.read_csv(data_file_path(",
      "        '$1'",
      "    ))\\",
      "        .pipe(clean_column_names)",
      "",
      "",
      "if __name__ == '__main__':",
      "    df = clean()",
      "    ensure_data_dir('clean')",
      "    df.to_csv(data_file_path(",
      "        'clean/$2.csv'",
      "    ), index=False)"
    ],
    "description": "Data clean script"
  },
  "Match script": {
    "scope": "python",
    "prefix": "match",
    "body": [
      "from lib.match import ThresholdMatcher, JaroWinklerSimilarity, ColumnsIndex",
      "from lib.path import data_file_path, ensure_data_dir",
      "import pandas as pd",
      "import sys",
      "sys.path.append('../')"
    ],
    "description": "Data match script"
  },
  "Fuse script": {
    "scope": "python",
    "prefix": "fuse",
    "body": [
      "import pandas as pd",
      "from lib.path import data_file_path, ensure_data_dir",
      "from lib.columns import (",
      "    rearrange_personnel_columns, rearrange_complaint_columns, rearrange_event_columns",
      ")",
      "from lib.uid import ensure_uid_unique",
      "from lib import events",
      "",
      "import sys",
      "sys.path.append('../')",
      "",
      "",
      "def fuse_events():",
      "    builder = events.Builder()",
      "    return builder.to_frame()",
      "",
      "",
      "if __name__ == '__main__':",
      "    ensure_data_dir('fuse')"
    ]
  }
}
